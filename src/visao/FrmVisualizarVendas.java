/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controllers.CtrlFuncionario;
import controllers.CtrlVendas;
import excecoes.ExcecaoGenerica;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import mensagens.Erro;
import modelo.Cliente;
import modelo.Comissoes;
import modelo.CondicaoPagamento;
import modelo.Funcionario;
import modelo.TipoPagamento;
import modelo.Vendas;
import utilitarios.Funcoes;

/**
 *
 * @author Gabriel
 */
public class FrmVisualizarVendas extends javax.swing.JFrame {
    
    private FrmVendas FRM_VENDAS = null;

    /**
     * Creates new form FrmVisualizarVendas
     */
    public FrmVisualizarVendas() {
        initComponents();
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFiltros = new javax.swing.JPanel();
        txtDataInicial = new javax.swing.JFormattedTextField();
        txtDataFinal = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnRealizarPesquisa = new javax.swing.JButton();
        ckFiltroFuncionarios = new javax.swing.JCheckBox();
        cbxFiltroFuncionario = new javax.swing.JComboBox<>();
        pnlDados = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDadosVendas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Movimentações | Visualizar Vendas");

        try {
            txtDataInicial.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            txtDataFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel1.setText("Data Inicial");

        jLabel2.setText("Data Final");

        btnRealizarPesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconsUtils/magnifier.png"))); // NOI18N
        btnRealizarPesquisa.setText("Realizar Pesquisa");
        btnRealizarPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarPesquisaActionPerformed(evt);
            }
        });

        ckFiltroFuncionarios.setText("Filtrar por Funcionário");
        ckFiltroFuncionarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ckFiltroFuncionariosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlFiltrosLayout = new javax.swing.GroupLayout(pnlFiltros);
        pnlFiltros.setLayout(pnlFiltrosLayout);
        pnlFiltrosLayout.setHorizontalGroup(
            pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltrosLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFiltrosLayout.createSequentialGroup()
                        .addComponent(ckFiltroFuncionarios)
                        .addGap(0, 394, Short.MAX_VALUE))
                    .addComponent(cbxFiltroFuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnRealizarPesquisa)
                .addContainerGap())
        );
        pnlFiltrosLayout.setVerticalGroup(
            pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFiltrosLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(ckFiltroFuncionarios))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRealizarPesquisa)
                    .addComponent(cbxFiltroFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        tblDadosVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Venda", "Cod. Cliente", "Nome Cliente", "Cod. Funcionario", "Nome Funcionario", "Data Venda", "Valor Bruto", "Desconto", "Valor Total", "Cod. Comissão", "Cod. Tipo Pagamento", "Cod. Condição Pagamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDadosVendas.getTableHeader().setReorderingAllowed(false);
        tblDadosVendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDadosVendasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDadosVendas);

        javax.swing.GroupLayout pnlDadosLayout = new javax.swing.GroupLayout(pnlDados);
        pnlDados.setLayout(pnlDadosLayout);
        pnlDadosLayout.setHorizontalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnlDadosLayout.setVerticalGroup(
            pnlDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlFiltros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRealizarPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarPesquisaActionPerformed
        if (txtDataInicial.getText() == null || txtDataInicial.getText().isEmpty() || txtDataInicial.getText().equals("  /  /    ")){
            Erro.show("Informe a data inicial ");
            return;
        } else if (!Funcoes.validaData(txtDataInicial.getText())) {
            Erro.show("Data inicial inválida");
            return;
        }
        if (txtDataFinal.getText() == null || txtDataFinal.getText().isEmpty() || txtDataFinal.getText().equals("  /  /    ")){
            Erro.show("Informe a data final ");
            return;
        } else if (!Funcoes.validaData(txtDataFinal.getText())) {
            Erro.show("Data final inválida");
            return;
        }
        if (ckFiltroFuncionarios.isSelected() && (cbxFiltroFuncionario.getSelectedIndex() == -1 || cbxFiltroFuncionario.getSelectedIndex() == 0)){        
            Erro.show("Informe o funcionário");
            return;
        }        
        if (Funcoes.comparaDatas(txtDataInicial.getText(), txtDataFinal.getText())> 0) {
            Erro.show("Datas inválidas");
            return;
        }
        carregarPesquisa();
    }//GEN-LAST:event_btnRealizarPesquisaActionPerformed

    private void ckFiltroFuncionariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ckFiltroFuncionariosActionPerformed
        if (ckFiltroFuncionarios.isSelected())
            carregarCombobox();
        else
            cbxFiltroFuncionario.removeAllItems();
    }//GEN-LAST:event_ckFiltroFuncionariosActionPerformed

    private void tblDadosVendasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDadosVendasMouseClicked
        if (tblDadosVendas.getSelectedRow() == -1)
            return;
        if (evt.getClickCount() >= 2){
            try {
                if (FRM_VENDAS == null)
                    FRM_VENDAS = new FrmVendas();
                Vendas venda = new Vendas();
                venda.setCodVenda((Integer)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 0));

                Cliente cliente = new Cliente();
                cliente.setCod_Cliente((Integer)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 1));
                cliente.setNome_Cliente(String.valueOf(tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 2)));

                Funcionario funcionario = new Funcionario();
                funcionario.setCod_Funcionario((Integer)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 3));
                funcionario.setNome_Funcionario(String.valueOf(tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 4)));

                venda.setDataVenda(String.valueOf(tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 5)));
                venda.setValorBruto((Double)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 6));
                venda.setDesconto((Double)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 7));
                venda.setValorTotal((Double)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 8));

                Comissoes comissao = null;
                if (tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 5) != null) {
                    comissao = new Comissoes();
                    comissao.setCod_comissao((Integer)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 9));
                }            

                TipoPagamento tipoPagamento = null;
                if (tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 6) != null){
                    tipoPagamento = new TipoPagamento();
                    tipoPagamento.setCod_pagamento((Integer)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 10));
                }            

                CondicaoPagamento condicaoPagamento = null;
                if (tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 7) != null){
                    condicaoPagamento = new CondicaoPagamento();
                    condicaoPagamento.setCod_condicao_pagamento((Integer)tblDadosVendas.getModel().getValueAt(tblDadosVendas.getSelectedRow(), 11));
                }

                venda.setCliente(cliente);
                venda.setFuncionario(funcionario);                       
                venda.setComissao(comissao);
                venda.setTipoPagamento(tipoPagamento);
                venda.setCondicaoPagamento(condicaoPagamento);            

                FRM_VENDAS.carregarCampos(venda);
                FRM_VENDAS.setVisible(true);
            } catch (Exception e){
                throw new ExcecaoGenerica(e);
            }
        }
    }//GEN-LAST:event_tblDadosVendasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVisualizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVisualizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVisualizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVisualizarVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmVisualizarVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRealizarPesquisa;
    private javax.swing.JComboBox<Funcionario> cbxFiltroFuncionario;
    private javax.swing.JCheckBox ckFiltroFuncionarios;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlDados;
    private javax.swing.JPanel pnlFiltros;
    private javax.swing.JTable tblDadosVendas;
    private javax.swing.JFormattedTextField txtDataFinal;
    private javax.swing.JFormattedTextField txtDataInicial;
    // End of variables declaration//GEN-END:variables

    private void carregarPesquisa(){
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblDadosVendas.getModel();
            modelo.setNumRows(0);

            String dataInicial = Funcoes.trataDataParaDb(txtDataInicial.getText());
            String dataFinal = Funcoes.trataDataParaDb(txtDataFinal.getText());    
            List<Vendas> lista = null;
            if (ckFiltroFuncionarios.isSelected()){
                Funcionario funcionario = (Funcionario) cbxFiltroFuncionario.getSelectedItem();
                lista = CtrlVendas.PesquisarVendasPorPeriodoFuncionario(dataInicial, dataFinal, funcionario);
            } else {
                lista = CtrlVendas.PesquisarVendasPorPeriodoFuncionario(dataInicial, dataFinal, null);
            }

            for(Vendas venda : lista){
                modelo.addRow(new Object [] {
                    venda.getCodVenda(),
                    venda.getCliente().getCod_Cliente(),
                    venda.getCliente().getNome_Cliente(),
                    venda.getFuncionario().getCod_Funcionario(),
                    venda.getFuncionario().getNome_Funcionario(),
                    venda.getDataVenda(),
                    venda.getValorBruto(),
                    venda.getDesconto(),
                    venda.getValorTotal(),
                    venda.getComissao().getCod_comissao(),
                    venda.getTipoPagamento().getCod_pagamento(),
                    venda.getCondicaoPagamento().getCod_condicao_pagamento()
                });
            }
        } catch (Exception e){
            throw new ExcecaoGenerica(e);
        }
    }
    
    private void carregarCombobox(){
        try {
            cbxFiltroFuncionario.removeAllItems();
            cbxFiltroFuncionario.addItem(new Funcionario(0, "Selecione"));
            CtrlFuncionario.PesquisarTodos().forEach(funcionario -> {
                cbxFiltroFuncionario.addItem(funcionario);
            });
        } catch (Exception e){
            throw new ExcecaoGenerica(e);
        }
    }
    
}
