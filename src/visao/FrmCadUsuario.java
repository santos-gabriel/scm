/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import controllers.CtrlFuncionario;
import controllers.CtrlUsuario;
import excecoes.ExcecaoGenerica;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modelo.Usuario;
import utilitarios.Funcoes;
import mensagens.Erro;
import mensagens.Informacao;
import modelo.Funcionario;

/**
 *
 * @author Gabriel
 */
public class FrmCadUsuario extends javax.swing.JFrame {

    FrmSelecionaRegistro FRM_SELECIONA_REGISTRO = null;
    private Usuario      USUARIO                = null;
    private boolean      INSERIR                = false;
    private boolean      ATUALIZAR              = false;
    private boolean      INATIVAR               = false;
    private boolean      CONSULTAR              = false;
    
    /**
     * Creates new form FrmCadUsuario
     */
    public FrmCadUsuario() {
        initComponents();
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/icon.png")).getImage());
        carregarPermissoes();
        carregarRegistros();
        carregarCombobox();
    }
    
    public FrmCadUsuario(String prInserir, String prAtualizar, String prInativar, String prConsultar) {
        initComponents();
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/icon.png")).getImage());
        carregarPermissoes();
        carregarRegistros();
        carregarCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGeral = new javax.swing.JPanel();
        txtBuscarUsuario = new javax.swing.JTextField();
        btnBuscarUsuario = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pnlDadosCadastrais = new javax.swing.JPanel();
        txtCodUsuario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtSenhaUsuario = new javax.swing.JPasswordField();
        txtLoginUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnExibirSenha = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbxFuncionario = new javax.swing.JComboBox<>();
        pnlOpcoes = new javax.swing.JPanel();
        btnInserir = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnInativar = new javax.swing.JButton();
        pnlRegistros = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro | Usuários");
        setResizable(false);

        txtBuscarUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscarUsuarioKeyPressed(evt);
            }
        });

        btnBuscarUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconsUtils/magnifier.png"))); // NOI18N
        btnBuscarUsuario.setText("Buscar");
        btnBuscarUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarUsuarioActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar usuário");

        pnlDadosCadastrais.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        txtCodUsuario.setEditable(false);

        jLabel2.setText("Código");

        jLabel4.setText("Nova Senha");

        jLabel3.setText("Login");

        btnExibirSenha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconsUtils/eye.png"))); // NOI18N
        btnExibirSenha.setText("Exibir");
        btnExibirSenha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnExibirSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExibirSenhaActionPerformed(evt);
            }
        });

        jLabel5.setText("Funcionário");

        javax.swing.GroupLayout pnlDadosCadastraisLayout = new javax.swing.GroupLayout(pnlDadosCadastrais);
        pnlDadosCadastrais.setLayout(pnlDadosCadastraisLayout);
        pnlDadosCadastraisLayout.setHorizontalGroup(
            pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosCadastraisLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDadosCadastraisLayout.createSequentialGroup()
                        .addGroup(pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCodUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtLoginUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(pnlDadosCadastraisLayout.createSequentialGroup()
                                .addComponent(txtSenhaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnExibirSenha))))
                    .addComponent(jLabel5)
                    .addComponent(cbxFuncionario, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        pnlDadosCadastraisLayout.setVerticalGroup(
            pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDadosCadastraisLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(pnlDadosCadastraisLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDadosCadastraisLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDadosCadastraisLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLoginUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSenhaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExibirSenha))))
                .addGap(15, 15, 15)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbxFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pnlOpcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Novo.png"))); // NOI18N
        btnInserir.setBorderPainted(false);
        btnInserir.setContentAreaFilled(false);
        btnInserir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInserir.setFocusPainted(false);
        btnInserir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInserirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInserirMouseExited(evt);
            }
        });
        btnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirActionPerformed(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Salvar.png"))); // NOI18N
        btnSalvar.setBorderPainted(false);
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSalvar.setFocusPainted(false);
        btnSalvar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnSalvarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnSalvarMouseExited(evt);
            }
        });
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnInativar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Inativar.png"))); // NOI18N
        btnInativar.setBorderPainted(false);
        btnInativar.setContentAreaFilled(false);
        btnInativar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInativar.setFocusPainted(false);
        btnInativar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInativarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInativarMouseExited(evt);
            }
        });
        btnInativar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInativarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOpcoesLayout = new javax.swing.GroupLayout(pnlOpcoes);
        pnlOpcoes.setLayout(pnlOpcoesLayout);
        pnlOpcoesLayout.setHorizontalGroup(
            pnlOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnInserir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInativar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOpcoesLayout.setVerticalGroup(
            pnlOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnInserir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnInativar)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlGeralLayout = new javax.swing.GroupLayout(pnlGeral);
        pnlGeral.setLayout(pnlGeralLayout);
        pnlGeralLayout.setHorizontalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlDadosCadastrais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlGeralLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarUsuario)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlGeralLayout.setVerticalGroup(
            pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeralLayout.createSequentialGroup()
                .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlGeralLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarUsuario)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(pnlDadosCadastrais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Login", "Cód. Funcionário", "Funcionário"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblUsuarios.getTableHeader().setReorderingAllowed(false);
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblUsuarios);

        javax.swing.GroupLayout pnlRegistrosLayout = new javax.swing.GroupLayout(pnlRegistros);
        pnlRegistros.setLayout(pnlRegistrosLayout);
        pnlRegistrosLayout.setHorizontalGroup(
            pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnlRegistrosLayout.setVerticalGroup(
            pnlRegistrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlRegistros, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlRegistros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarUsuarioActionPerformed
            // ROTINA PARA ENVIAR REGISTROS DA PESQUISA PARA O FORMULÁRIO DE SELEÇÃO DE REGISTRO
        try {
            JTable tabela = new JTable();
            // variavel que recebe os dados da query tratados sendo somente os que serão apresentados para o usuário
            List<String[]> dados = new ArrayList<>();

            Usuario usuario = new Usuario();
            usuario.setLogin(txtBuscarUsuario.getText());
            List<Usuario> usuarioPesquisa = CtrlUsuario.PesquisarViaLoginInicia(usuario);

            // tratando os dados para visualização
            for (Usuario u : usuarioPesquisa){
                dados.add(new String[]{String.valueOf(u.getCod_Usuario()), u.getLogin()});
            }

            // criando modelo para a jtable
            tabela.setModel(new DefaultTableModel(
                // linhas com os contaúdos(dados) da jtable
                dados.toArray(new String[dados.size()][]),
                // colunas da jtable    
                new String [] {"CODIGO", "LOGIN"}){
                    // guardando as colunas que podem ou não ser editáveis (obs.: atualmente [04/09/2020] não existe tratamento para edição no formulário de seleção de registro)
                    boolean[] canEdit = new boolean []{false, false};
                    // sobrescrevendo o método isCellEditable para settar a edição das células com os valores do array canEdit
                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }                
                });
            tabela.getTableHeader().setReorderingAllowed(false);

            if (FRM_SELECIONA_REGISTRO == null)
                FRM_SELECIONA_REGISTRO = new FrmSelecionaRegistro(this, true);
            // preenchendo a tabela do formulário de seleção de registro, passando o modelo e a tabela criados acima
            FRM_SELECIONA_REGISTRO.preencheTabela(tabela.getModel(), tabela);
            FRM_SELECIONA_REGISTRO.setTitle("Usuários | Seleção ");
            FRM_SELECIONA_REGISTRO.setVisible(true);
            // obs.: com o formulário de seleção de registro sendo modal, o código a baixo só será executado após o fechamento do formulário de seleção de registro

            // pegando os dados do registro selecionado pelo usuário, caso usuário cancelar a seleção retornará null
            // os registros retornarão na mesma sequência de ídice que foram enviados
            String[] registroSelecionado = FRM_SELECIONA_REGISTRO.getDadosSelecao();
            if (registroSelecionado != null){
                txtCodUsuario.setText(registroSelecionado[0]);
                txtLoginUsuario.setText(registroSelecionado[1]);
                txtSenhaUsuario.setText("");
            }
        } catch(Exception e){
            throw new ExcecaoGenerica(e);
        }
    }//GEN-LAST:event_btnBuscarUsuarioActionPerformed

    private void txtBuscarUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarUsuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
            btnBuscarUsuarioActionPerformed(null);
    }//GEN-LAST:event_txtBuscarUsuarioKeyPressed

    private void btnExibirSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExibirSenhaActionPerformed
        if (txtSenhaUsuario.getEchoChar() == '*')
            txtSenhaUsuario.setEchoChar((char)0);
        else
            txtSenhaUsuario.setEchoChar('*');
    }//GEN-LAST:event_btnExibirSenhaActionPerformed

    private void btnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirActionPerformed
        limparEntradasDeDados();
        carregarCombobox();
    }//GEN-LAST:event_btnInserirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        if (txtLoginUsuario.getText().equals("") || txtLoginUsuario.getText() == null){
            Erro.show("Informe um login por favor");
            return;
        }
        if (new String(txtSenhaUsuario.getPassword()).equals("") || txtSenhaUsuario.getPassword() == null){
            Erro.show("Informe uma senha por favor");
            return;
        }
        try {
            if (USUARIO == null)
                USUARIO = new Usuario();

            USUARIO.setLogin(txtLoginUsuario.getText());
            USUARIO.setSenha(Funcoes.getEncrypt(new String(txtSenhaUsuario.getPassword())));
            if (cbxFuncionario.getSelectedIndex() > 0)
                USUARIO.setFuncionario((Funcionario)cbxFuncionario.getSelectedItem());            
            if (txtCodUsuario.getText().equals("") || txtCodUsuario.getText() == null || txtCodUsuario.getText().isEmpty()){
                Usuario user = USUARIO;
                user.setCod_Usuario(0);
                if (CtrlUsuario.VerificaDisponibilidadeLogin(user) != null){
                    Erro.show("Login indisponível, por favor tente outro");
                    return;
                }
                CtrlUsuario.SalvarTodosCampos(USUARIO);
                USUARIO = CtrlUsuario.PesquisarViaLogin(USUARIO);
                txtCodUsuario.setText(Integer.toString(USUARIO.getCod_Usuario()));
                Informacao.show("Usuário salvo com sucesso");
            } else{
                if (!isATUALIZAR()){
                    Erro.show("Você não tem permissão para atualizar");
                    return;
                }
                USUARIO.setCod_Usuario(Integer.parseInt(txtCodUsuario.getText()));
                if (CtrlUsuario.VerificaDisponibilidadeLogin(USUARIO) != null){
                    Erro.show("Login indisponível, por favor tente outro");
                    return;
                }
                CtrlUsuario.AtualizarTodosCampos(USUARIO);
                Informacao.show("Usuário atualizado com sucesso");
            }
            carregarRegistros();
            limparEntradasDeDados();
        } catch(Exception e){
            throw new ExcecaoGenerica(e);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnInativarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInativarActionPerformed
        if (!(txtCodUsuario.getText().equals("") || txtCodUsuario.getText() == null)){ 
            try {
            if (USUARIO == null)
                USUARIO = new Usuario();
            USUARIO.setCod_Usuario(Integer.parseInt(txtCodUsuario.getText()));
            CtrlUsuario.Excluir(USUARIO);
            Informacao.show("Usuário inativado com sucesso");
            limparEntradasDeDados();
            carregarRegistros();
            } catch(Exception e){
                throw new ExcecaoGenerica(e);
            }
        }
    }//GEN-LAST:event_btnInativarActionPerformed

    private void tblUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMouseClicked
        limparEntradasDeDados();
        if (tblUsuarios.getSelectedRow() != -1){
            try {
                txtCodUsuario.setText(String.valueOf(tblUsuarios.getModel().getValueAt(tblUsuarios.getSelectedRow(), 0)));
                txtLoginUsuario.setText(String.valueOf(tblUsuarios.getModel().getValueAt(tblUsuarios.getSelectedRow(), 1)));

                if (tblUsuarios.getModel().getValueAt(tblUsuarios.getSelectedRow(), 2) == null)
                    cbxFuncionario.setSelectedItem(new Funcionario(0, "Selecione"));
                else {
                    cbxFuncionario.setSelectedItem(CtrlFuncionario.PesquisarViaCodigo(new Funcionario(Integer.parseInt(String.valueOf(tblUsuarios.getModel().getValueAt(tblUsuarios.getSelectedRow(), 2))))));
                    
                }   
            } catch(Exception e){
                throw new ExcecaoGenerica(e);
            }
        }
    }//GEN-LAST:event_tblUsuariosMouseClicked

    private void btnInserirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirMouseEntered
        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Novo2.png")));
    }//GEN-LAST:event_btnInserirMouseEntered

    private void btnInserirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInserirMouseExited
        btnInserir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Novo.png")));
    }//GEN-LAST:event_btnInserirMouseExited

    private void btnSalvarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseEntered
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Salvar2.png")));
    }//GEN-LAST:event_btnSalvarMouseEntered

    private void btnSalvarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalvarMouseExited
        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Salvar.png")));
    }//GEN-LAST:event_btnSalvarMouseExited

    private void btnInativarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInativarMouseEntered
        btnInativar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Inativar2.png")));
    }//GEN-LAST:event_btnInativarMouseEntered

    private void btnInativarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInativarMouseExited
        btnInativar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Inativar.png")));
    }//GEN-LAST:event_btnInativarMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarUsuario;
    private javax.swing.JButton btnExibirSenha;
    private javax.swing.JButton btnInativar;
    private javax.swing.JButton btnInserir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<Funcionario> cbxFuncionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlDadosCadastrais;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlOpcoes;
    private javax.swing.JPanel pnlRegistros;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTextField txtBuscarUsuario;
    private javax.swing.JTextField txtCodUsuario;
    private javax.swing.JTextField txtLoginUsuario;
    private javax.swing.JPasswordField txtSenhaUsuario;
    // End of variables declaration//GEN-END:variables

    private void limparEntradasDeDados() {
        txtCodUsuario.setText("");
        cbxFuncionario.setSelectedItem(new Funcionario(0, "Selecione"));
        txtLoginUsuario.setText("");
        txtSenhaUsuario.setText("");
        USUARIO = null;
    }
    
    public void carregarPermissoes (){
        btnInserir.setEnabled(isINSERIR());
        btnInativar.setEnabled(isINATIVAR());
        btnBuscarUsuario.setEnabled(isCONSULTAR());
        btnSalvar.setEnabled(isINSERIR() && isATUALIZAR());
    }

    public boolean isINSERIR() {
        return INSERIR;
    }

    public void setINSERIR(boolean INSERIR) {
        this.INSERIR = INSERIR;
    }

    public boolean isATUALIZAR() {
        return ATUALIZAR;
    }

    public void setATUALIZAR(boolean ATUALIZAR) {
        this.ATUALIZAR = ATUALIZAR;
    }

    public boolean isINATIVAR() {
        return INATIVAR;
    }

    public void setINATIVAR(boolean INATIVAR) {
        this.INATIVAR = INATIVAR;
    }

    public boolean isCONSULTAR() {
        return CONSULTAR;
    }

    public void setCONSULTAR(boolean CONSULTAR) {
        this.CONSULTAR = CONSULTAR;
    }
    
    public void carregarRegistros(){
        try {
            DefaultTableModel modelo = (DefaultTableModel) tblUsuarios.getModel();
            modelo.setNumRows(0);
            CtrlUsuario.PesquisarTodos().forEach((u) -> {
                modelo.addRow(new Object []{
                    u.getCod_Usuario(),
                    u.getLogin(),
                    u.getFuncionario().getCod_Funcionario(),
                    u.getFuncionario().getNome_Funcionario()
                });
            });
        } catch(Exception e){
            throw new ExcecaoGenerica(e);
        }
    }
    
    private void carregarCombobox(){
        try {
            cbxFuncionario.removeAllItems();
            cbxFuncionario.addItem(new Funcionario(0, "Selecione"));
            CtrlFuncionario.PesquisarTodos().forEach(funcionario -> {
                cbxFuncionario.addItem(funcionario);
            });
        } catch(Exception e){
            throw new ExcecaoGenerica(e);
        }
    }
    
}
